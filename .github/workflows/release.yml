name: Release and Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Java for Clojure
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install Clojure CLI
      uses: DeLaGuardo/setup-clojure@12.5
      with:
        cli: '1.11.1.1413'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run vscode:prepublish
    
    - name: Get version from package.json
      id: version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Package VSIX
      run: npx vsce package
    
    - name: Get VSIX filename
      id: vsix
      run: echo "filename=$(ls *.vsix)" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: REPLTILE v${{ steps.version.outputs.version }}
        files: |
          ${{ steps.vsix.outputs.filename }}
        body: |
          ## REPLTILE v${{ steps.version.outputs.version }}
          
          ### Instalação
          1. Baixe o arquivo `.vsix` dos assets abaixo
          2. No Cursor IDE, pressione `Cmd+Shift+P` (macOS) ou `Ctrl+Shift+P` (Windows/Linux)
          3. Digite "Extensions: Install from VSIX..."
          4. Selecione o arquivo `.vsix` baixado
          
          ### Changelog
          Veja as mudanças desta versão no histórico de commits.
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish to OpenVSX
      run: npx ovsx publish ${{ steps.vsix.outputs.filename }} -p ${{ secrets.OVSX_TOKEN }}
      env:
        OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: repltile-vsix-v${{ steps.version.outputs.version }}
        path: ${{ steps.vsix.outputs.filename }}