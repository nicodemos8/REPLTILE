#!/bin/bash

# Script para atualizar vers√£o e fazer release

set -e

if [ $# -eq 0 ]; then
    echo "Usage: $0 <version-type>"
    echo "   version-type: major, minor, patch, or specific version (e.g., 1.2.3)"
    exit 1
fi

VERSION_TYPE=$1

echo "üè∑Ô∏è  REPLTILE Version Bump"
echo "========================"

# Verificar se estamos na main
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "‚ùå Voc√™ deve estar na branch 'main' para fazer release"
    echo "   Branch atual: $CURRENT_BRANCH"
    exit 1
fi

# Verificar se est√° limpo
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ùå H√° mudan√ßas n√£o commitadas"
    git status --short
    exit 1
fi

# Atualizar vers√£o no package.json
echo "üìù Atualizando vers√£o..."
if [[ $VERSION_TYPE =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
    # Vers√£o espec√≠fica
    NEW_VERSION=$VERSION_TYPE
    npm version $NEW_VERSION --no-git-tag-version
else
    # Tipo de vers√£o (major, minor, patch)
    NEW_VERSION=$(npm version $VERSION_TYPE --no-git-tag-version)
    NEW_VERSION=${NEW_VERSION#v}  # Remove 'v' prefix
fi

echo "üì¶ Nova vers√£o: $NEW_VERSION"

# Build e package
echo "üî® Fazendo build..."
npm run vscode:prepublish
npm run package

# Commit e tag
echo "üìù Commitando mudan√ßas..."
git add package.json
git commit -m "chore: bump version to $NEW_VERSION"

echo "üè∑Ô∏è  Criando tag..."
git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"

echo "üöÄ Fazendo push..."
git push origin main
git push origin "v$NEW_VERSION"

echo ""
echo "‚úÖ Release v$NEW_VERSION criado com sucesso!"
echo "   O GitHub Actions ir√°:"
echo "   - Fazer build automaticamente"
echo "   - Criar release no GitHub"
echo "   - Publicar no OpenVSX"
echo ""
echo "üîó Acompanhe em: https://github.com/nubank/REPLTILE/actions"